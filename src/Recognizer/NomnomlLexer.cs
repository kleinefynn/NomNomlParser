//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/!Files/!Coding/!CS/NomNoml/NomNoml/Grammar\Nomnoml.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class NomnomlLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		NAME=10, VERTICALBAR=11, SEMICOLON=12, COMMA=13, Association=14, Dependency=15, 
		Generalization=16, Implementation=17, Composition=18, Aggregation=19, 
		WS=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"DIGITS", "CHARS", "NAME", "VERTICALBAR", "SEMICOLON", "COMMA", "Association", 
		"Dependency", "Generalization", "Implementation", "Composition", "Aggregation", 
		"WS"
	};


	public NomnomlLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public NomnomlLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'<'", "'>'", "':'", "'('", "')'", "'['", "']'", "'--'", "'-/-'", 
		null, "'|'", "';'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, "NAME", "VERTICALBAR", 
		"SEMICOLON", "COMMA", "Association", "Dependency", "Generalization", "Implementation", 
		"Composition", "Aggregation", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Nomnoml.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static NomnomlLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\x93', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x6', '\r', 'J', '\n', '\r', '\r', 
		'\r', '\xE', '\r', 'K', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x5', '\x11', '\\', '\n', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x5', '\x12', 'h', '\n', 
		'\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x5', '\x13', 'p', '\n', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x5', '\x14', 'z', '\n', '\x14', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x5', '\x15', '\x84', '\n', '\x15', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x5', '\x16', '\x8E', '\n', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x2', 
		'\x2', '\x18', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\x2', 
		'\x17', '\x2', '\x19', '\f', '\x1B', '\r', '\x1D', '\xE', '\x1F', '\xF', 
		'!', '\x10', '#', '\x11', '%', '\x12', '\'', '\x13', ')', '\x14', '+', 
		'\x15', '-', '\x16', '\x3', '\x2', '\x4', '\x4', '\x2', '\x43', '\\', 
		'\x63', '|', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', 
		'\x9C', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '/', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\x31', '\x3', '\x2', '\x2', '\x2', '\a', '\x33', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\x35', '\x3', '\x2', '\x2', '\x2', '\v', '\x37', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x39', '\x3', '\x2', '\x2', '\x2', '\xF', 
		';', '\x3', '\x2', '\x2', '\x2', '\x11', '=', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '@', '\x3', '\x2', '\x2', '\x2', '\x15', '\x44', '\x3', '\x2', 
		'\x2', '\x2', '\x17', '\x46', '\x3', '\x2', '\x2', '\x2', '\x19', 'I', 
		'\x3', '\x2', '\x2', '\x2', '\x1B', 'M', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x1F', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'!', '[', '\x3', '\x2', '\x2', '\x2', '#', 'g', '\x3', '\x2', '\x2', '\x2', 
		'%', 'o', '\x3', '\x2', '\x2', '\x2', '\'', 'y', '\x3', '\x2', '\x2', 
		'\x2', ')', '\x83', '\x3', '\x2', '\x2', '\x2', '+', '\x8D', '\x3', '\x2', 
		'\x2', '\x2', '-', '\x8F', '\x3', '\x2', '\x2', '\x2', '/', '\x30', '\a', 
		'>', '\x2', '\x2', '\x30', '\x4', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\x32', '\a', '@', '\x2', '\x2', '\x32', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x34', '\a', '<', '\x2', '\x2', '\x34', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\x36', '\a', '*', '\x2', '\x2', '\x36', '\n', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\x38', '\a', '+', '\x2', '\x2', '\x38', '\f', '\x3', 
		'\x2', '\x2', '\x2', '\x39', ':', '\a', ']', '\x2', '\x2', ':', '\xE', 
		'\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '_', '\x2', '\x2', '<', '\x10', 
		'\x3', '\x2', '\x2', '\x2', '=', '>', '\a', '/', '\x2', '\x2', '>', '?', 
		'\a', '/', '\x2', '\x2', '?', '\x12', '\x3', '\x2', '\x2', '\x2', '@', 
		'\x41', '\a', '/', '\x2', '\x2', '\x41', '\x42', '\a', '\x31', '\x2', 
		'\x2', '\x42', '\x43', '\a', '/', '\x2', '\x2', '\x43', '\x14', '\x3', 
		'\x2', '\x2', '\x2', '\x44', '\x45', '\x4', '\x32', ';', '\x2', '\x45', 
		'\x16', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\t', '\x2', '\x2', '\x2', 
		'G', '\x18', '\x3', '\x2', '\x2', '\x2', 'H', 'J', '\x5', '\x17', '\f', 
		'\x2', 'I', 'H', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', '\x2', '\x2', 
		'\x2', 'K', 'I', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\x3', '\x2', '\x2', 
		'\x2', 'L', '\x1A', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\a', '~', '\x2', 
		'\x2', 'N', '\x1C', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', '=', '\x2', 
		'\x2', 'P', '\x1E', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\a', '.', '\x2', 
		'\x2', 'R', ' ', '\x3', '\x2', '\x2', '\x2', 'S', '\\', '\a', '/', '\x2', 
		'\x2', 'T', 'U', '\a', '/', '\x2', '\x2', 'U', '\\', '\a', '@', '\x2', 
		'\x2', 'V', 'W', '\a', '>', '\x2', '\x2', 'W', 'X', '\a', '/', '\x2', 
		'\x2', 'X', '\\', '\a', '@', '\x2', '\x2', 'Y', 'Z', '\a', '>', '\x2', 
		'\x2', 'Z', '\\', '\a', '/', '\x2', '\x2', '[', 'S', '\x3', '\x2', '\x2', 
		'\x2', '[', 'T', '\x3', '\x2', '\x2', '\x2', '[', 'V', '\x3', '\x2', '\x2', 
		'\x2', '[', 'Y', '\x3', '\x2', '\x2', '\x2', '\\', '\"', '\x3', '\x2', 
		'\x2', '\x2', ']', '^', '\a', '/', '\x2', '\x2', '^', '_', '\a', '/', 
		'\x2', '\x2', '_', 'h', '\a', '@', '\x2', '\x2', '`', '\x61', '\a', '>', 
		'\x2', '\x2', '\x61', '\x62', '\a', '/', '\x2', '\x2', '\x62', '\x63', 
		'\a', '/', '\x2', '\x2', '\x63', 'h', '\a', '@', '\x2', '\x2', '\x64', 
		'\x65', '\a', '>', '\x2', '\x2', '\x65', '\x66', '\a', '/', '\x2', '\x2', 
		'\x66', 'h', '\a', '/', '\x2', '\x2', 'g', ']', '\x3', '\x2', '\x2', '\x2', 
		'g', '`', '\x3', '\x2', '\x2', '\x2', 'g', '\x64', '\x3', '\x2', '\x2', 
		'\x2', 'h', '$', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\a', '/', '\x2', 
		'\x2', 'j', 'k', '\a', '<', '\x2', '\x2', 'k', 'p', '\a', '@', '\x2', 
		'\x2', 'l', 'm', '\a', '>', '\x2', '\x2', 'm', 'n', '\a', '<', '\x2', 
		'\x2', 'n', 'p', '\a', '/', '\x2', '\x2', 'o', 'i', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'l', '\x3', '\x2', '\x2', '\x2', 'p', '&', '\x3', '\x2', '\x2', 
		'\x2', 'q', 'r', '\a', '/', '\x2', '\x2', 'r', 's', '\a', '/', '\x2', 
		'\x2', 's', 't', '\a', '<', '\x2', '\x2', 't', 'z', '\a', '@', '\x2', 
		'\x2', 'u', 'v', '\a', '>', '\x2', '\x2', 'v', 'w', '\a', '<', '\x2', 
		'\x2', 'w', 'x', '\a', '/', '\x2', '\x2', 'x', 'z', '\a', '/', '\x2', 
		'\x2', 'y', 'q', '\x3', '\x2', '\x2', '\x2', 'y', 'u', '\x3', '\x2', '\x2', 
		'\x2', 'z', '(', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', '-', '\x2', 
		'\x2', '|', '\x84', '\a', '/', '\x2', '\x2', '}', '~', '\a', '-', '\x2', 
		'\x2', '~', '\x7F', '\a', '/', '\x2', '\x2', '\x7F', '\x84', '\a', '@', 
		'\x2', '\x2', '\x80', '\x81', '\a', '>', '\x2', '\x2', '\x81', '\x82', 
		'\a', '-', '\x2', '\x2', '\x82', '\x84', '\a', '/', '\x2', '\x2', '\x83', 
		'{', '\x3', '\x2', '\x2', '\x2', '\x83', '}', '\x3', '\x2', '\x2', '\x2', 
		'\x83', '\x80', '\x3', '\x2', '\x2', '\x2', '\x84', '*', '\x3', '\x2', 
		'\x2', '\x2', '\x85', '\x86', '\a', 'q', '\x2', '\x2', '\x86', '\x8E', 
		'\a', '/', '\x2', '\x2', '\x87', '\x88', '\a', 'q', '\x2', '\x2', '\x88', 
		'\x89', '\a', '/', '\x2', '\x2', '\x89', '\x8E', '\a', '@', '\x2', '\x2', 
		'\x8A', '\x8B', '\a', '>', '\x2', '\x2', '\x8B', '\x8C', '\a', '/', '\x2', 
		'\x2', '\x8C', '\x8E', '\a', 'q', '\x2', '\x2', '\x8D', '\x85', '\x3', 
		'\x2', '\x2', '\x2', '\x8D', '\x87', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x8E', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x90', '\t', '\x3', '\x2', '\x2', '\x90', '\x91', '\x3', 
		'\x2', '\x2', '\x2', '\x91', '\x92', '\b', '\x17', '\x2', '\x2', '\x92', 
		'.', '\x3', '\x2', '\x2', '\x2', '\n', '\x2', 'K', '[', 'g', 'o', 'y', 
		'\x83', '\x8D', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
